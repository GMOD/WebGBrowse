#!/usr/bin/perl

use warnings;
use strict;

use lib '../../lib';
use CGI qw(:standard);
use WebGB;
use WebGB::GeneralData;
use WebGB::ProfileData;
use WebGB::DBEngine;
use Digest::MD5  qw(md5_hex);
use File::Copy;
use YAML;

my $q = new CGI;
my $salt = '3$m(r9g633';
my ($timeStampDigest, $uploadDirectory, $uploadRoot) = ($q->url_param('tsd'), '', $WebGB::TMP);
if ($timeStampDigest eq '') {
	print $q->redirect(
		-location => '/'
	);
	exit(0);
}
$uploadDirectory = $uploadRoot . '/' . $timeStampDigest;
unless (-d $uploadDirectory) {
	print $q->redirect(
		-location => '/'
	);
	exit(0);
}

my $gbdir = $WebGB::WWW2 . '/gbrowse2/databases/' . $timeStampDigest;
mkdir $gbdir, 0755;

my ($inputProfileFile, $generalSettingsFile, $trackConfigurationFile) = ('inputProfile.yml', 'generalSettings.yml', 'trackConfiguration.yml');

my $generalData = WebGB::GeneralData->new("$uploadDirectory/$generalSettingsFile");
my $description = $generalData->getDescription;
my $profileData = WebGB::ProfileData->new("$uploadDirectory/$inputProfileFile");
my $emailAddress = $profileData->getEMailAddress;
my $dbEntryStatus = $profileData->getDBEntryStatus;
my $GB2Status = $profileData->getGB2Status;
my $gffFileName = $profileData->getGFFFileName;
my $seqID = $profileData->getSeqID;
my $emailAddressDigest = md5_hex(crypt($emailAddress, $salt));

copy("$uploadDirectory/$gffFileName", "$gbdir/$gffFileName");

open CONFIGURATION, ">", $WebGB::CONF2 . '/' . $timeStampDigest . '.conf' or die 'Unable to open conf file ' . $WebGB::CONF2 . '/' . $timeStampDigest . '.conf'; 

print CONFIGURATION "[GENERAL]\ndb_adaptor = Bio::DB::SeqFeature::Store\ndb_args = -adaptor memory\n\t-dir '" . $WebGB::WWW2 . "/gbrowse2/databases/" . $timeStampDigest . "'\ninitial landmark=$seqID:1..10000\n";

my @confGeneral = YAML::LoadFile("$uploadDirectory/$generalSettingsFile");
foreach (@confGeneral) { 
	foreach (@{${$_}{'sub'}}) {
		next if ((${$_}{'CONF_TAG'} eq 'plugins') || (${$_}{'CONF_TAG'} eq 'image widths') || (${$_}{'CONF_TAG'} eq 'default width'));
		print CONFIGURATION ${$_}{'CONF_TAG'}, " = ";
		if (ref(${$_}{'VALUE'}) eq 'ARRAY') {
			print CONFIGURATION join (' ', @{${$_}{'VALUE'}}), "\n";
		} else {
			my $val = ${$_}{'VALUE'};
			$val = '' unless (defined $val);
			print CONFIGURATION $val, "\n"; 
		}
	} 
}

my $conf = '';
my $defFeatures = '';
my %trackConfigurationData = YAML::LoadFile("$uploadDirectory/$trackConfigurationFile");
foreach (sort(keys %{$trackConfigurationData{'Tracks'}})) {
	my %curTrack = %{${$trackConfigurationData{'Tracks'}}{$_}};
	$conf .= "\n[$_]\n";
	$defFeatures .= "\t$_\n";
	$conf .= "feature = $curTrack{'feature'}\n";
	$conf .= "glyph = ${${$curTrack{'glyph'}}[0]}{'glyph'}\n";
	foreach (@{$curTrack{'glyph'}}) {
		foreach (@{${$_}{'sub'}}) {
			my $ignoreIfNull = '';
			$ignoreIfNull = ${$_}{'IGNORE_IF_NULL'} if (${$_}{'IGNORE_IF_NULL'});
			if ($ignoreIfNull eq '1') {
				next if (${$_}{'VALUE'} eq '');
			}
			$conf .= "${$_}{'CONF_TAG'} = ";
			my $template = '';
			$template = ${$_}{'templ'} if (${$_}{'templ'});
			if ($template eq 'check') {
				if (${$_}{'VALUE'}) {
					if (${$_}{'VALUE'} eq (${$_}{'NAME'}) . '1') {
						$conf .= "1 \n";
					} else {
						$conf .= "0 \n";
					}
				} else {
					$conf .= "0 \n";
				}
			} else {
				$conf .= "${$_}{'VALUE'}\n";
			}
		}
	}
}

print CONFIGURATION "\ndefault features = $defFeatures\n";
print CONFIGURATION qq(header = <div id="container"><div id="header"><img src="/include/img/webgbrowse.jpg" alt="The Center for Genomics and Bioinformatics - WebGBrowse" /></div><div class="navbar"><ul id="topnav"><li><a href="http://webgbrowse.cgb.indiana.edu/webgbrowse/index.html">Home</a></li><li><a href="http://webgbrowse.cgb.indiana.edu/webgbrowse/about.html">About</a></li><li><a href="http://webgbrowse.cgb.indiana.edu/webgbrowse/tutorial.html">Tutorial</a></li><li><a href="http://webgbrowse.cgb.indiana.edu/webgbrowse/glyphdoc.html">Glyph Library</a></li><li><a href="http://webgbrowse.cgb.indiana.edu/webgbrowse/faq.html">FAQ</a></li><li><a href="http://webgbrowse.cgb.indiana.edu/webgbrowse/software.html">Software</a></li><li><a href="http://webgbrowse.cgb.indiana.edu/webgbrowse/support.html">Support</a></li></ul></div></div><p><font size="4"><b>$description</b></font></p><a name="webgb"><div><div class="ctl_hidden" onclick="visibility('webgb_panel',1)" id="webgb_panel_show" style="display:none"><img src="/gbrowse2/images/buttons/plus.png" alt="+" />&nbsp;<span class="tctl"><b>WebGBrowse Control Panel</b></span></div><div class="ctl_visible" onclick="visibility('webgb_panel',0)" id="webgb_panel_hide" style="display:inline"><img src="/gbrowse2/images/buttons/minus.png" alt="-" />&nbsp;<span class="tctl"><b>WebGBrowse Control Panel</b></span></div><div class="el_visible" id="webgb_panel" style="display:inline"><table class="searchtitle" border="0" cellspacing="0" width="100%"><tr class="searchbody"><td width="20%"><input type="button" class="ctrlpnlbtn" name="cmdEdit" value="Edit Configuration" onclick="location.href='http://webgbrowse.cgb.indiana.edu/cgi-bin/webgbrowse/configureTracks?tsd=$timeStampDigest';" /></td><td width="80%">Click <b>Edit Configuration</b> to return to the track configuration panel</td></tr><tr class="searchbody"><td><input type="button" class="ctrlpnlbtn" name="cmdDownload" value="Download Configuration" onclick="window.open('http://webgbrowse.cgb.indiana.edu/cgi-bin/webgbrowse/downloadConf2?tsd=$timeStampDigest');" /></td><td>Click <b>Download Configuration</b> to download the configuration file</td></tr></table></div></div></a> #WEBGB#\n);

print CONFIGURATION $conf;
close CONFIGURATION;

unless ($GB2Status) {
	open MASTER, ">>", $WebGB::CONF2 . '/GBrowse.conf' or die 'Unable to open conf file ' . $WebGB::CONF2 . '/GBrowse.conf'; 
	print MASTER "\n[$timeStampDigest]\ndescription = $description\npath=$timeStampDigest.conf\n";
	close MASTER;
	$profileData->setGB2Status(1);
	$profileData->saveInputProfileToFile("$uploadDirectory/$inputProfileFile");
}

unless ($emailAddress eq '') {
	unless ($dbEntryStatus) {
		my $dbh = webGBConnect;
		addDataSet($emailAddressDigest, $timeStampDigest, $description, $dbh);
		$profileData->setDBEntryStatus(1);
		$profileData->saveInputProfileToFile("$uploadDirectory/$inputProfileFile");

		my $sendmail = $WebGB::SEND_MAIL . ' -t';
		my $from = "From: webgbrowse\@cgb.indiana.edu\n";
		my $reply_to = "Reply-to: biohelp\@cgb.indiana.edu\n";
		my $subject  = "Subject: [WebGBrowse] $description \n";
		my $content  = qq(
Dear WebGBrowse user,
	Your dataset ($description) is successfully configured and hosted by WebGBrowse. You can view your GBrowse display by copying and pasting the following URL in your browser. 
	http://$ENV{'SERVER_NAME'}/cgi-bin/gb2/gbrowse/$timeStampDigest/

	You can also view your previous datasets using the URL below.

	http://$ENV{'SERVER_NAME'}/cgi-bin/showHistory?ead=$emailAddressDigest

If you have any questions or suggestions, please contact biohelp\@cgb.indiana.edu. Thanks for using WebGBrowse.

WebGBrowse Development Team
Center for Genomics and Bioinformatics
Indiana University
		);
		my $send_to  = "To: $emailAddress\n";

		open(SENDMAIL, "|$sendmail") or die "Cannot open $sendmail: $!";
		print SENDMAIL $from;
		print SENDMAIL $reply_to;
		print SENDMAIL $subject;
		print SENDMAIL $send_to;
		print SENDMAIL "Content-type: text/plain\n\n";
		print SENDMAIL $content;
		close(SENDMAIL);

	}
}

print $q->redirect( 
	-location => "http://$ENV{'SERVER_NAME'}/cgi-bin/gb2/gbrowse/$timeStampDigest"
); 
exit(0);

